


function canPartition(nums){
    // backtracking (BRUTE FORCE SLOW)
    if (arr1.reduce((a, b) => a + b, 0) == nums.reduce((a, b) => a + b, 0)){
        console.log(arr1, nums)
        return true
    }

    for (let i = 0; i < nums.length; i ++){
        arr1.push(nums.shift()) // move top element of nums to arr1
        if(canPartition(nums)){
            return true
        }
        nums.push(arr1.pop()) // undo the action
    }
    return false
    


}

let arr1 = []
let nums
console.log(canPartition(nums)) //true

